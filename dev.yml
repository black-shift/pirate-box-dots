---
- name: Configure Pirate Box
  hosts: dev

  vars:
    host_username: ubuntu
    authorized_keys: '{{ lookup("file", "../id_rsa.pub") }}'
  handlers:
    - name: Restart sshd
      service: name=sshd state=restarted
      become: true
  tasks:
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true
      become: true

    - name: Install base system packages
      apt:
        state: latest
        update_cache: true
        pkg:
          - curl
          - git
          - htop
          - python3
          - python3-pip
          - unzip
          - wget
          - zip
          - apt-transport-https
          - ca-certificates
          - software-properties-common
          - virtualenv
          - python3-setuptools
      tags: ['base_packages', 'packages']
      become: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      become: true

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present
      become: true

    - name: Install dev packages
      apt:
        state: latest
        update_cache: true
        pkg:
          - ffmpeg
          - docker-ce
      become: true
      tags: ['packages']

    - name: Remove not-needed packages
      package:
        name: '{{item}}'
        state: absent
      loop:
        - fedora-chromium-config
      tags: ['packages']
      become: true

# Create Dir
    - name: Create Test Dir
      file:
        path: /test-dir
        state: directory
        mode: '0755'
        owner: root
        group: root
      become: true

    - name: Copy File in Test Dir
      copy:
        src: user
        dest: /test-dir/user
        mode: '0644'
        owner: root
        group: root
      become: true

    - name: Ensure personal dot files
      copy:
        src: '{{item.src}}'
        dest: '{{item.dest}}'
        mode: '0600'
        owner: '{{host_username}}'
        group: '{{host_username}}'
      loop:
        - { src: dots/wgetrc, dest: '/home/{{host_username}}/.wgetrc' }
        - { src: dots/gitignore, dest: '/home/{{host_username}}/.gitignore' }
        - { src: dots/curlrc, dest: '/home/{{host_username}}/.curlrc' }
      tags: ['dots']

    - name: Ensure root dot files
      copy:
        src: '{{item.src}}'
        dest: '{{item.dest}}'
        mode: '0600'
        owner: root
        group: root
      loop:
        - { src: dots/wgetrc, dest: '/root/.wgetrc' }
        - { src: dots/curlrc, dest: '/root/.curlrc' }
      become: true
      tags: ['dots']

    - name: Ensure personal files (from templates)
      template:
        src: '{{item.src}}'
        dest: '{{item.dest}}'
        mode: '0600'
        owner: '{{host_username}}'
        group: '{{host_username}}'
      loop:
        - { src: dots/authorized_keys, dest: '/home/{{host_username}}/.ssh/authorized_keys' }

    - name: Ensure default directories in home
      file:
        path: '{{item}}'
        state: directory
        mode: '0700'
        owner: '{{host_username}}'
        group: '{{host_username}}'
      loop:
        - '/home/{{host_username}}/playground'
      become: true
      tags: ['dir-structure']

    # Install python extra packages and ensure they are up to date.
    - name: Ensure pip3 packages
      pip:
        name: '{{item}}'
        executable: pip3
        state: latest
      loop:
        - ansible
        - awscli
        - pipenv
        - docker
      become: true
#    - name: Clone dots repo to the created box
#      git:
   #     repo: '{{ lookup("file", "../dots_repo") }}'
   #     dest: '/home/{{host_username}}/dots'
   #     clone: true
   #     update: true
    - name: Create docker group
      group:
        name: docker
        state: present
      become: yes

    - name: Add user to the docker group
      user:
        name: "{{ host_username }}"
        groups: docker
        append: yes
      become: yes

    - name: Pull default Docker image
      community.docker.docker_image:
        name: "hello-world"
        source: pull

    - name: Create nginx container
      community.docker.docker_container:
        name: "hello-world"
        image: "hello-world"
        state: present
